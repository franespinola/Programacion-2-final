AYUDA JHIPSTER(1er Proyecto)
https://www.jhipster.tech/

0 Requisitos para este proyecto
0.1 postgres
0.2 JDK 15
0.3 Git
0.4 Node
ar pgadmin(postgres) y crear base de datos  --> https://www.pgadmin.org/download
https://www.oracle.com/java/technologies/javase/jdk15-archive-downloads.html
https://git-scm.com/downloads
https://nodejs.org/es/download/

0.5 Crear Base de datos
  Database bdEmpresaSolverTic
  owner    postgres
  password hola123 (al momento de instalar postgres)
-------------
1 Abrir VSCode, abrir una carpeta(proyecto01) nueva y abrir una terminal 
2 Verificar instalaciones 
  2.1 java --version
  2.2 git --version
  2.3 node --version
3 Install JHipster ->npm install -g generator-jhipster
4 run--> jhipster
(https://www.jhipster.tech/creating-an-app/)
4.1  Which type of applicationType--> Monolithic application ...
4.2  What is the base name of your application?: proyecto01
4.3  package:com.calizaya.proyecto2
4.4  Do you want to make it reactive with Spring WebFlux? No
4.5  What is your default Java package name? com.calizaya.proyecto01
4.6  Which *type* of authentication would you like to use--> JWT authentication (stateless, with a token)
4.7  Which *type* of database would you like to use? -->SQL(H2, PostgreSQL, MySQL, MariaDB, Oracle,MYSQL)
4.8  Which *Production* database would you like to use?--> PostgreSQL
4.9  Which *development* database would you like to use--> PostgreSQL
4.10  Which cache do you want to use (Spring)? --> ehcache (local cache, for a single node)
4.11  Do you want to use Hibernate 2nd level cache?--> Yes
4.12  Would you like to use Maven o Gradle for building the backend? --> maven
4.13  Do you want to use the JHipster Registry to configure...-->No
4.14  Which other technologies: vacio (solo precionar enter)
4.15  Which framework would you like to use for the client frontend?--> Angular
4.16  Do you want to generate the admin UI? Yes
4.17  Would you like to use a bootswathc theme-->Default JHipster
4.18  Would you like to enable internationalization support? --> Y
4.19  Please choole the language of the application --> Spanish
4.20  please choose addtional languages to install --> vacio (enter)
4.21  Besides JUnit and Jest, which testing framework -->vacio (enter)
4.22  would you like to install other generators from the JHipster Marketplace?--> No
---------------
5 modificar->Proyecto01/src/main/resources/config/application-dev
url: jdbc:h2:file:./target/h2db/db/bdEmpresaSolverTic;DB_CLOSE_DELAY=-1
username: postgres
owner: hola123
server:   port:8090
//en consola hacer correr con el comando ->   mvnw    o     ./mvnw
//abrir navegador ---->localhost:8090
------------------
7 Detener el programa(ctrl+c),crear el modelo en jdl
https://www.jhipster.tech/jdl-studio/
------------------
entity Region {
	nombreRegion String
}

entity Pais {
	nombrePais String
}

// comentario de una linea
/** comentario de un parrafo */
entity Direccion {
	calle String
	codigoPostal String
	ciudad String
	provincia String
}

entity Departamento {
	nombreDepartamento String required
}

entity Tarea {
	titulo String
	descripcion String
}
entity Empleado {
	nombres String
	apellidos String
	correo String
	nroCelular String
	fechacontrato Instant
	salario Long
	comisionPorcentaje Long
}

entity Trabajo {
	tituloTrabajo String
	salarioMin Long
	salarioMax Long
}

entity Contrato {
	fechaInicio Instant
	fechaFin Instant
	lenguaje Idioma
}

enum Idioma {
    ESPANOL, INGLES, PORTUGUES
}

relationship OneToOne {
	Pais{region} to Region
}

relationship OneToOne {
	Direccion{pais} to Pais
}

relationship OneToOne {
	Departamento{direccion} to Direccion
}

relationship ManyToMany {
	Trabajo{tarea(titulo)} to Tarea{trabajo}
}

relationship OneToMany {
	Empleado to Trabajo{empleado}
	Departamento to	Empleado{departamento}
}

relationship ManyToOne {
	Empleado{inmediatosuperior} to Empleado
}

// defining multiple oneToOne relationships
relationship OneToOne {
	Contrato{trabajo} to Trabajo
	Contrato{departamento} to Departamento
	Contrato{empleado} to Empleado
}

// mostrar con scroll 
paginate Contrato, Empleado with infinite-scroll
paginate Trabajo with pagination

// Insertar opciones basicas a todos menos a Empleado, trabajo 
service all with serviceImpl except Empleado, Trabajo
--------------------------------
descargar el archivo "jhipster-jdl.jdl" en la misma carpeta "proyecto01"
ejecutar el comando-->jhipster import-jdl jhipster-jdl.jdl
reemplazar todo --> a
ejecutar -> mvnw    o     ./mvnw
ingresar al navegador --> localhost:8090